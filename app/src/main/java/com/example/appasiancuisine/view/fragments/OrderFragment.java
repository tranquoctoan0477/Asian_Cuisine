package com.example.appasiancuisine.view.fragments;

import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.util.Log;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.appasiancuisine.R;
import com.example.appasiancuisine.adapter.OrderAdapter;
import com.example.appasiancuisine.data.dto.OrderDTO;
import com.example.appasiancuisine.presenter.OrderContract;
import com.example.appasiancuisine.presenter.OrderPresenter;
import com.example.appasiancuisine.utils.PreferenceManager;

import java.util.List;

public class OrderFragment extends Fragment implements OrderContract.View {
    private RecyclerView recyclerView;
    private OrderAdapter orderAdapter;
    private OrderPresenter orderPresenter;

    public OrderFragment() {}

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_order, container, false);
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        Log.d("ORDER_FRAGMENT", "üîç OrderFragment onViewCreated() ƒë∆∞·ª£c g·ªçi th√†nh c√¥ng!");

        try {
            // 1Ô∏è‚É£ √Ånh x·∫° RecyclerView
            recyclerView = view.findViewById(R.id.recycler_orders);
            recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
            Log.d("ORDER_FRAGMENT", "‚úÖ RecyclerView ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng.");

            // 2Ô∏è‚É£ Kh·ªüi t·∫°o Presenter
            orderPresenter = new OrderPresenter(this);
            Log.d("ORDER_FRAGMENT", "‚úÖ OrderPresenter ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng.");

            // 3Ô∏è‚É£ L·∫•y token ng∆∞·ªùi d√πng t·ª´ PreferenceManager
            PreferenceManager preferenceManager = new PreferenceManager(requireContext());
            String token = preferenceManager.getAccessToken();
            Log.d("ORDER_FRAGMENT", "üîë Token hi·ªán t·∫°i: " + token);

            if (token == null || token.isEmpty()) {
                Toast.makeText(getContext(), "Vui l√≤ng ƒëƒÉng nh·∫≠p!", Toast.LENGTH_SHORT).show();
                Log.e("ORDER_FRAGMENT", "‚ùå Kh√¥ng t√¨m th·∫•y token ho·∫∑c token r·ªóng.");
            } else {
                // 4Ô∏è‚É£ G·ªçi API l·∫•y danh s√°ch ƒë∆°n h√†ng
                Log.d("ORDER_FRAGMENT", "üîç G·ªçi API l·∫•y danh s√°ch ƒë∆°n h√†ng...");
                orderPresenter.getOrders(token);
            }
        } catch (Exception e) {
            Log.e("ORDER_FRAGMENT", "‚ùå L·ªói khi kh·ªüi t·∫°o OrderFragment: " + e.getMessage(), e);
        }
    }

    @Override
    public void showOrders(List<OrderDTO> orderList) {
        try {
            if (orderList == null) {
                Log.e("ORDER_LIST", "‚ùå Danh s√°ch ƒë∆°n h√†ng nh·∫≠n ƒë∆∞·ª£c l√† NULL.");
                Toast.makeText(getContext(), "L·ªói: Danh s√°ch ƒë∆°n h√†ng kh√¥ng h·ª£p l·ªá!", Toast.LENGTH_SHORT).show();
                return;
            }

            Log.d("ORDER_LIST", "‚úÖ S·ªë l∆∞·ª£ng ƒë∆°n h√†ng: " + orderList.size());

            if (orderList.isEmpty()) {
                Toast.makeText(getContext(), "Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o!", Toast.LENGTH_SHORT).show();
            } else {
                // Log t·ª´ng ƒë∆°n h√†ng ƒë·ªÉ ki·ªÉm tra
                for (OrderDTO order : orderList) {
                    if (order != null) {
                        Log.d("ORDER_DATA", "üì¶ ƒê∆°n h√†ng ID: " + order.getId() +
                                ", Tr·∫°ng th√°i: " + order.getStatus() +
                                ", T·ªïng: " + order.getTotal() +
                                ", Ng√†y t·∫°o: " + order.getCreatedAt());
                    } else {
                        Log.e("ORDER_DATA", "‚ùå M·ªôt ƒë·ªëi t∆∞·ª£ng OrderDTO l√† NULL.");
                    }
                }

                // Kh·ªüi t·∫°o Adapter v√† g√°n cho RecyclerView
                try {
                    orderAdapter = new OrderAdapter(getContext(), orderList);
                    recyclerView.setAdapter(orderAdapter);
                    Log.d("RECYCLER_VIEW", "‚úÖ Adapter ƒë√£ ƒë∆∞·ª£c set. S·ªë l∆∞·ª£ng item: " + orderList.size());
                } catch (Exception e) {
                    Log.e("RECYCLER_VIEW_ERROR", "‚ùå L·ªói khi kh·ªüi t·∫°o Adapter: " + e.getMessage(), e);
                    Toast.makeText(getContext(), "L·ªói khi hi·ªÉn th·ªã danh s√°ch ƒë∆°n h√†ng!", Toast.LENGTH_SHORT).show();
                }
            }
        } catch (Exception e) {
            Log.e("SHOW_ORDERS_ERROR", "‚ùå L·ªói khi hi·ªÉn th·ªã ƒë∆°n h√†ng: " + e.getMessage(), e);
            Toast.makeText(getContext(), "L·ªói khi hi·ªÉn th·ªã ƒë∆°n h√†ng!", Toast.LENGTH_SHORT).show();
        }
    }

    @Override
    public void showError(String message) {
        Log.e("ORDER_ERROR", "‚ùå L·ªói: " + message);
        Toast.makeText(getContext(), "L·ªói: " + message, Toast.LENGTH_SHORT).show();
    }
}
