package com.example.appasiancuisine.view;

import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.appasiancuisine.R;
import com.example.appasiancuisine.adapter.CheckoutItemAdapter;
import com.example.appasiancuisine.data.dto.CheckoutItemDTO;
import com.example.appasiancuisine.presenter.CheckoutContract;
import com.example.appasiancuisine.presenter.CheckoutPresenter;
import com.example.appasiancuisine.utils.PreferenceManager;

import java.util.List;

public class CheckoutActivity extends AppCompatActivity implements CheckoutContract.View {

    private EditText editAddress, editPhone, editNote, editVoucher;
    private RecyclerView recyclerCheckoutItems;
    private CheckoutItemAdapter adapter;
    private List<CheckoutItemDTO> checkoutItems;

    private CheckoutPresenter presenter;
    private String accessToken;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_checkout);

        Log.d("CheckoutActivity", "üì¶ B·∫Øt ƒë·∫ßu CheckoutActivity");

        presenter = new CheckoutPresenter(this);

        editAddress = findViewById(R.id.edit_address);
        editPhone = findViewById(R.id.edit_phone);
        editNote = findViewById(R.id.edit_address_note);
        editVoucher = findViewById(R.id.edit_voucher);
        recyclerCheckoutItems = findViewById(R.id.recycler_checkout_items);

        checkoutItems = (List<CheckoutItemDTO>) getIntent().getSerializableExtra("checkout_items");
        if (checkoutItems == null || checkoutItems.isEmpty()) {
            Toast.makeText(this, "Gi·ªè h√†ng tr·ªëng!", Toast.LENGTH_SHORT).show();
            Log.e("CheckoutActivity", "‚ùå Kh√¥ng nh·∫≠n ƒë∆∞·ª£c d·ªØ li·ªáu gi·ªè h√†ng t·ª´ Intent");
            finish();
            return;
        }

        Log.d("CheckoutActivity", "‚úÖ Nh·∫≠n ƒë∆∞·ª£c " + checkoutItems.size() + " s·∫£n ph·∫©m t·ª´ gi·ªè h√†ng");

        adapter = new CheckoutItemAdapter(this, checkoutItems);
        recyclerCheckoutItems.setLayoutManager(new LinearLayoutManager(this));
        recyclerCheckoutItems.setAdapter(adapter);

        updateTotalReceipt();

        PreferenceManager prefManager = new PreferenceManager(this);
        accessToken = prefManager.getAccessToken();
        Log.d("CheckoutActivity", "üîê AccessToken (actual): " + accessToken);

        findViewById(R.id.button_confirm_payment).setOnClickListener(v -> handleCheckout());
    }

    private void handleCheckout() {
        String address = editAddress.getText().toString().trim();
        String phoneNumber = editPhone.getText().toString().trim(); // ‚úÖ rename bi·∫øn cho kh·ªõp
        String addressNote = editNote.getText().toString().trim(); // ‚úÖ rename bi·∫øn
        String voucherCode = editVoucher.getText().toString().trim();

        Log.d("CheckoutActivity", "üì§ Th·ª±c hi·ªán checkout v·ªõi:");
        Log.d("CheckoutActivity", "  - ƒê·ªãa ch·ªâ: " + address);
        Log.d("CheckoutActivity", "  - SƒêT: " + phoneNumber);
        Log.d("CheckoutActivity", "  - Ghi ch√∫: " + addressNote);
        Log.d("CheckoutActivity", "  - M√£ gi·∫£m gi√°: " + voucherCode);

        if (address.isEmpty() || phoneNumber.isEmpty()) {
            Toast.makeText(this, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß ƒë·ªãa ch·ªâ v√† s·ªë ƒëi·ªán tho·∫°i!", Toast.LENGTH_SHORT).show();
            return;
        }

        if (accessToken == null) {
            Toast.makeText(this, "B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!", Toast.LENGTH_SHORT).show();
            return;
        }

        presenter.checkout(address, phoneNumber, addressNote, voucherCode, checkoutItems, accessToken); // ‚úÖ truy·ªÅn ƒë√∫ng t√™n
    }


    private void updateTotalReceipt() {
        double subtotal = 0;
        int discount = 0;
        int deliveryFee = 15000;

        for (CheckoutItemDTO item : checkoutItems) {
            double price = item.getPrice();
            int quantity = item.getQuantity();
            Log.d("CheckoutActivity", "üßæ " + item.getProductName() + ": " + quantity + " x " + price);
            subtotal += price * quantity;
        }

        int total = (int) (subtotal - discount + deliveryFee);

        ((TextView) findViewById(R.id.text_subtotal)).setText(String.format("%,d‚Ç´", (int) subtotal));
        ((TextView) findViewById(R.id.text_discount)).setText("-" + String.format("%,d‚Ç´", discount));
        ((TextView) findViewById(R.id.text_delivery_fee)).setText(String.format("%,d‚Ç´", deliveryFee));
        ((TextView) findViewById(R.id.text_total)).setText(String.format("%,d‚Ç´", total));

        Log.d("CheckoutActivity", "üí∞ T·ªïng ph·ª•: " + subtotal);
        Log.d("CheckoutActivity", "üöö Ph√≠ ship: " + deliveryFee);
        Log.d("CheckoutActivity", "üîñ Gi·∫£m gi√°: " + discount);
        Log.d("CheckoutActivity", "üíµ T·ªïng c·ªông: " + total);
    }

    @Override
    public void onCheckoutSuccess(String message) {
        Log.d("CheckoutActivity", "‚úÖ ƒê·∫∑t h√†ng th√†nh c√¥ng: " + message);
        Toast.makeText(this, message, Toast.LENGTH_LONG).show();

        new android.os.Handler().postDelayed(() -> {
            Intent intent = new Intent(CheckoutActivity.this, MainActivity.class);
            intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(intent);
            finish();
        }, 2500);
    }

    @Override
    public void onCheckoutError(String error) {
        Log.e("CheckoutActivity", "‚ùå ƒê·∫∑t h√†ng th·∫•t b·∫°i: " + error);
        Toast.makeText(this, error, Toast.LENGTH_LONG).show();
    }
}
